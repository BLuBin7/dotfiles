# Basic options
set -g default-terminal "tmux-256color"
set-option -sa terminal-features ",*-256color*:RGB"
set-option -ga terminal-overrides ",*-256color*:TC"

setw -g xterm-keys on
set -s escape-time 10
set -sg repeat-time 600
set -g detach-on-destroy off
set -s focus-events on

set -q -g status-utf8 on
setw -q -g utf8 on
set -g history-limit 10000
set -g mouse on
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
setw -g automatic-rename on
set-option -g renumber-windows on
set -g set-titles on
set -g display-panes-time 800
set -g display-time 1000
set -g status-interval 10
set -g monitor-activity on
set -g visual-activity off
set -g set-clipboard on
set -g status-position bottom
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Improve colors
set -g default-terminal 'xterm-256color'

# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @continuum-restore 'on'

# Theme
set -g @catppuccin_flavour 'latte'
set -g @catppuccin_window_tabs_enabled on
set -g @catppuccin_date_time "%Y-%m-%d"
set -g @catppuccin_user "off"
set -g @catppuccin_host "off"

# Keybindings
set -g prefix C-s
unbind-key C-b
bind -r C-s send-prefix
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection
set -g @yank_selection_mouse 'clipboard'

# Navigation & window/pane management
bind C-c new-session
bind C-f command-prompt -p find-session 'switch-client -t %%'
bind Tab switch-client -l
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind > swap-pane -D
bind < swap-pane -U
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
unbind n
unbind p
bind -r H previous-window
bind -r L next-window
bind ` last-window

# Copy mode vim keys for pane navigation
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Reload config
bind-key r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Split windows with current directory
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# Popup & custom commands
bind C-d popup -d "~/code/dotfiles/" -xC -yC -w80% -h80% -E "vim +Files"
bind g run-shell "github ."
bind-key g run-shell "tmux-popup 'lazygit'"
bind-key r run-shell "touch tmp/restart.txt"
bind w split-window -h -c ~/wiki "vim +Files"
bind o run-shell "open '#{pane_current_path}'"
bind-key t send-keys -t 2 "tree -C .git/objects -I 'info|pack'" 'C-m'

# Smart pane switching aware of vim splits (with vim-tmux-navigator)
is_vim="ps -o state=,tty=,comm= | grep -iqE '^[^TXZ ]+ +#{s|/dev/||:pane_tty}\s+(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# More intuitive pane resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-S-Left resize-pane -L 10
bind -n C-S-Right resize-pane -R 10
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Up resize-pane -U 5

# Status bar styling and info
set -g status-left-length 40
set -g status-fg black
set -g status-bg green
set -g status-left '[#S - #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)] '
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online)  #(date '+%a, %b %d - %I:%M') "
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '

# Start default shell as zsh
set -g default-command "zsh"

# Run TPM plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Other useful bindings
bind b break-pane -d
bind C-b send-keys 'tat && exit' 'C-m'
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Popup related bindings
bind-key C-t run-shell "tmux-popup 'tmux-open-session' 100"
bind C popup -d "~/code/things-report/" -xC -yC -w80% -h80% -E "bin/checkall"
bind-key C-j run-shell "tmux-popup 'tmux-switch-session' 100"
bind-key p run-shell "tmux-popup"
bind-key n run-shell "tmux-popup 'vim ~/notes.md'"

# URL opener
bind-key u capture-pane -J \; \
  save-buffer "/tmp/tmux-buffer" \; \
  delete-buffer \; \
  display-popup -E -h '80%' "extract_url -l /tmp/tmux-buffer | fzf --select-1 | xargs open"

# Quick session switching
bind-key Space switch-client -l

# Clipboard copy with pbcopy (macOS)
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '

